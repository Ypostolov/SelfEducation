Общее описание

В этой задаче вам надо разработать класс для представления 
рациональных чисел и внедрить его в систему типов языка С++ так, 
чтобы им можно было пользоваться естественным образом. 
Задание состоит из нескольких частей. 
К каждой части приложен 
файл с заготовкой программы, который имеет следующую структуру

#include <iostream>
using namespace std;

// Комментарии, которые говорят, что именно нужно реализовать в этой программе

int main() {
    // Набор юнит-тестов для вашей реализации
    cout << "OK" << endl;
    return 0;
}

Вам нужно, не меняя тело функции main, реализовать то, что 
предложено в комментариях, так, чтобы ваша программа выводила 
на экран сообщение OK. Функция main содержит ряд юнит-тестов, 
которые проверяют правильность вашей реализации. 
Если эти тесты находят ошибку в вашей реализации, 
то вместо OK программа выведет подсказку о том, 
что именно работает неправильно.

Часть 4

Наконец, вам нужно реализовать возможность 
использовать объекты класса Rational в качестве 
элементов контейнера set и ключей в контейнере map. 

Пример:

set<Rational> rationals;
rationals.insert(Rational(1, 2));
rationals.insert(Rational(1, 3));

map<Rational, string> name;
name[Rational(1, 2)] = "одна вторая";

Шаблон программы:

#include <iostream>
#include <map>
#include <set>
#include <vector>
using namespace std;

class Rational {
    // Вставьте сюда реализацию класса Rational из первой части
};

// Вставьте сюда реализацию operator == для класса Rational из второй части

// Реализуйте для класса Rational оператор(ы), необходимые для использования его
// в качестве ключа map'а и элемента set'а

int main() {
    {
        const set<Rational> rs = {{1, 2}, {1, 25}, {3, 4}, {3, 4}, {1, 2}};
        if (rs.size() != 3) {
            cout << "Wrong amount of items in the set" << endl;
            return 1;
        }

        vector<Rational> v;
        for (auto x : rs) {
            v.push_back(x);
        }
        if (v != vector<Rational>{{1, 25}, {1, 2}, {3, 4}}) {
            cout << "Rationals comparison works incorrectly" << endl;
            return 2;
        }
    }

    {
        map<Rational, int> count;
        ++count[{1, 2}];
        ++count[{1, 2}];

        ++count[{2, 3}];

        if (count.size() != 2) {
            cout << "Wrong amount of items in the map" << endl;
            return 3;
        }
    }

    cout << "OK" << endl;
    return 0;
}
