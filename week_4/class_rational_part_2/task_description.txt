Общее описание

В этой задаче вам надо разработать класс для представления 
рациональных чисел и внедрить его в систему типов языка С++ так, 
чтобы им можно было пользоваться естественным образом. 
Задание состоит из нескольких частей. 
К каждой части приложен 
файл с заготовкой программы, который имеет следующую структуру

#include <iostream>
using namespace std;

// Комментарии, которые говорят, что именно нужно реализовать в этой программе

int main() {
    // Набор юнит-тестов для вашей реализации
    cout << "OK" << endl;
    return 0;
}

Вам нужно, не меняя тело функции main, реализовать то, что 
предложено в комментариях, так, чтобы ваша программа выводила 
на экран сообщение OK. Функция main содержит ряд юнит-тестов, 
которые проверяют правильность вашей реализации. 
Если эти тесты находят ошибку в вашей реализации, 
то вместо OK программа выведет подсказку о том, 
что именно работает неправильно.

Часть 2

Реализуйте для класса Rational операторы ==, + и - так, 
чтобы операции с дробями можно было записывать естественным 
образом. 
Например, следующий код должен быть валидным:

const Rational r = Rational(1, 2) + Rational(1, 3) - Rational(1, 4);
if (r == Rational(7, 12)) {
  cout << "equal";
}

Шаблон программы:

#include <iostream>
using namespace std;

class Rational {
    // Вставьте сюда реализацию класса Rational из первой части
};

// Реализуйте для класса Rational операторы ==, + и -

int main() {
    {
        Rational r1(4, 6);
        Rational r2(2, 3);
        bool equal = r1 == r2;
        if (!equal) {
            cout << "4/6 != 2/3" << endl;
            return 1;
        }
    }

    {
        Rational a(2, 3);
        Rational b(4, 3);
        Rational c = a + b;
        bool equal = c == Rational(2, 1);
        if (!equal) {
            cout << "2/3 + 4/3 != 2" << endl;
            return 2;
        }
    }

    {
        Rational a(5, 7);
        Rational b(2, 9);
        Rational c = a - b;
        bool equal = c == Rational(31, 63);
        if (!equal) {
            cout << "5/7 - 2/9 != 31/63" << endl;
            return 3;
        }
    }

    cout << "OK" << endl;
    return 0;
}
